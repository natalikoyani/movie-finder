{"version":3,"file":"static/js/53.ce31844a.chunk.js","mappings":"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","sources":["api.js","pages/CastPage/CastPage.styled.js","pages/CastPage/CastPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '16d168f707f6ea30309ca4c94be54a91';\n\nexport const fetchTrending = async () => {\n    try {\n        const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n        return response.data.results;\n    } catch (error) {\n        console.error(error.message);\n    }\n}\n\nexport const fetchMovieById = async (id) => {\n    try {\n        const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n        return response.data;\n    } catch (error) {\n        console.error(error.message);\n    }\n}\n\nexport const fetchCast = async (id) => {\n    try {\n        const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n        return response.data.cast;\n    } catch (error) {\n        console.error(error.message);\n    }\n}\n\nexport const fetchReviews = async (id) => {\n    try {\n        const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n        return response.data.results;\n    } catch (error) {\n        console.error(error.message);\n    }\n}\n\nexport const fetchMovies = async (query) => {\n    try {\n        const response = await axios.get(`/search/movie?query=${query}&api_key=${API_KEY}`);\n        return response.data.results;\n    } catch (error) {\n        console.error(error.message);\n    }\n}","import styled from 'styled-components';\n\nexport const CastContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  padding: 20px;\n`;\n\nexport const CastItem = styled.li`\n  flex-basis: calc(100vh/4);\n`;\n\nexport const CastImg = styled.img`\n  width: 100%;\n`;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchCast } from \"api\";\nimport { CastContainer, CastItem, CastImg } from './CastPage.styled';\n\nexport default function Cast() {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n\n    useEffect(() => {\n        if (!movieId) return;\n        const fetchData = async () => {\n            try {\n                const data = await fetchCast(movieId);\n                setCast(data);\n            } catch (error) {\n                console.error(error.message);\n            }\n        }\n\n        fetchData();\n    }, [movieId]);\n\n    const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n    return (\n        <CastContainer>\n            {cast.map(actor => (\n                <CastItem key={actor.id}>\n                    <CastImg src={\n                        actor.profile_path\n                            ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n                            : defaultImg\n                    }\n                        alt=\"actor\"\n                    ></CastImg>\n                    <p>{actor.name}</p>\n                    <p>Character: {actor.character}</p>\n                </CastItem>\n            ))}\n        </CastContainer>\n    )\n}"],"names":["axios","API_KEY","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","t0","console","error","message","stop","apply","arguments","fetchMovieById","_ref2","_callee2","id","_context2","_x","fetchCast","_ref3","_callee3","_context3","cast","_x2","fetchReviews","_ref4","_callee4","_context4","_x3","fetchMovies","_ref5","_callee5","query","_context5","_x4","CastContainer","styled","_templateObject","_taggedTemplateLiteral","CastItem","_templateObject2","CastImg","_templateObject3","Cast","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setCast","useEffect","fetchData","_jsx","children","map","actor","_jsxs","src","profile_path","alt","name","character"],"sourceRoot":""}